import { StreamKeys } from '../enums';
import { StreamSet } from '../models';
import { Request } from '../request';
declare type GetActivityStreamsRequest = {
    id: number;
    keys: StreamKeys | StreamKeys[];
};
declare type GetRouteStreamsRequest = {
    id: number;
};
declare type GetSegmentEffortStreamsRequest = {
    id: number;
    keys: StreamKeys | StreamKeys[];
};
declare type GetSegmentStreamsRequest = {
    id: number;
    keys: StreamKeys | StreamKeys[];
};
export declare class Streams {
    private readonly request;
    constructor(request: Request);
    getActivityStreams(params: GetActivityStreamsRequest): Promise<StreamSet>;
    getRouteStreams(params: GetRouteStreamsRequest): Promise<StreamSet>;
    getSegmentEffortStreams(params: GetSegmentEffortStreamsRequest): Promise<StreamSet>;
    getSegmentStreams(params: GetSegmentStreamsRequest): Promise<StreamSet>;
}
export {};
