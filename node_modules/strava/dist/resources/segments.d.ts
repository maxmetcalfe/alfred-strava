import { DetailedSegment, ExplorerResponse, SummarySegment } from '../models';
import { Request } from '../request';
declare type ActivityType = 'running' | 'ridding';
declare type ExploreSegmentsRequest = {
    bounds: string;
    activity_type?: ActivityType;
    min_cat?: number;
    max_cat?: number;
};
declare type GetLoggedInAthleteStarredSegmentsRequest = {
    page?: number;
    per_page?: number;
};
declare type GetSegmentByIdRequest = {
    id: number;
};
declare type StarSegmentRequest = {
    id: number;
    starred: boolean;
};
export declare class Segments {
    private readonly request;
    constructor(request: Request);
    exploreSegments(params: ExploreSegmentsRequest): Promise<ExplorerResponse>;
    getLoggedInAthleteStarredSegments(params: GetLoggedInAthleteStarredSegmentsRequest): Promise<SummarySegment[]>;
    getSegmentById(params: GetSegmentByIdRequest): Promise<DetailedSegment>;
    starSegment(params: StarSegmentRequest): Promise<DetailedSegment>;
}
export {};
